"""
"""
#Import modules for plotting and modelling
#import sys; sys.path.append("/home/oyvind/github_uio/NuPyCEE")
from directory_master import Foldermap
Foldermap().activate_environ() #set os.eviron to correct path
from omega import omega

#####################################################
### Class inheriting omega for experimental usage ###
#####################################################
class omega_new(omega):
    def __init__(self, bestfit_namespace):
        omega.__init__(self, galaxy=bestfit_namespace.bestfit_galaxy, in_out_control=bestfit_namespace.bestfit_in_out_control, SF_law=bestfit_namespace.bestfit_SF_law, DM_evolution=bestfit_namespace.bestfit_DM_evolution, Z_trans=bestfit_namespace.bestfit_Z_trans, f_dyn=bestfit_namespace.bestfit_f_dyn, sfe=bestfit_namespace.bestfit_sfe, outflow_rate=bestfit_namespace.bestfit_outflow_rate, inflow_rate=bestfit_namespace.bestfit_inflow_rate, rand_sfh=bestfit_namespace.bestfit_rand_sfh, cte_sfr=bestfit_namespace.bestfit_cte_sfr, m_DM_0=bestfit_namespace.bestfit_m_DM_0, mass_loading=bestfit_namespace.bestfit_mass_loading, t_star=bestfit_namespace.bestfit_t_star, sfh_file=bestfit_namespace.bestfit_sfh_file, in_out_ratio=bestfit_namespace.bestfit_in_out_ratio, stellar_mass_0=bestfit_namespace.bestfit_stellar_mass_0, z_dependent=bestfit_namespace.bestfit_z_dependent, exp_ml=bestfit_namespace.bestfit_exp_ml, nsmerger_bdys=bestfit_namespace.bestfit_nsmerger_bdys, imf_type=bestfit_namespace.bestfit_imf_type, alphaimf=bestfit_namespace.bestfit_alphaimf, imf_bdys=bestfit_namespace.bestfit_imf_bdys, sn1a_rate=bestfit_namespace.bestfit_sn1a_rate, iniZ=bestfit_namespace.bestfit_iniZ, dt=bestfit_namespace.bestfit_dt, special_timesteps=bestfit_namespace.bestfit_special_timesteps, tend=bestfit_namespace.bestfit_tend, mgal=bestfit_namespace.bestfit_mgal, transitionmass=bestfit_namespace.bestfit_transitionmass, iolevel=bestfit_namespace.bestfit_iolevel, ini_alpha=bestfit_namespace.bestfit_ini_alpha, nb_nsm_per_m=bestfit_namespace.bestfit_nb_nsm_per_m, t_nsm_coal=bestfit_namespace.bestfit_t_nsm_coal, table=bestfit_namespace.bestfit_table, hardsetZ=bestfit_namespace.bestfit_hardsetZ, sn1a_on=bestfit_namespace.bestfit_sn1a_on, nsm_dtd_power=bestfit_namespace.bestfit_nsm_dtd_power, sn1a_table=bestfit_namespace.bestfit_sn1a_table, ns_merger_on=bestfit_namespace.bestfit_ns_merger_on, f_binary=bestfit_namespace.bestfit_f_binary, f_merger=bestfit_namespace.bestfit_f_merger, t_merger_max=bestfit_namespace.bestfit_t_merger_max, m_ej_nsm=bestfit_namespace.bestfit_m_ej_nsm, nsmerger_table=bestfit_namespace.bestfit_nsmerger_table, bhns_merger_on=bestfit_namespace.bestfit_bhns_merger_on, m_ej_bhnsm=bestfit_namespace.bestfit_m_ej_bhnsm, bhnsmerger_table=bestfit_namespace.bestfit_bhnsmerger_table, iniabu_table=bestfit_namespace.bestfit_iniabu_table, extra_source_on=bestfit_namespace.bestfit_extra_source_on, extra_source_table=bestfit_namespace.bestfit_extra_source_table, f_extra_source=bestfit_namespace.bestfit_f_extra_source, pre_calculate_SSPs=bestfit_namespace.bestfit_pre_calculate_SSPs, extra_source_mass_range=bestfit_namespace.bestfit_extra_source_mass_range, extra_source_exclude_Z=bestfit_namespace.bestfit_extra_source_exclude_Z, pop3_table=bestfit_namespace.bestfit_pop3_table, imf_bdys_pop3=bestfit_namespace.bestfit_imf_bdys_pop3, imf_yields_range_pop3=bestfit_namespace.bestfit_imf_yields_range_pop3, starbursts=bestfit_namespace.bestfit_starbursts, beta_pow=bestfit_namespace.bestfit_beta_pow, gauss_dtd=bestfit_namespace.bestfit_gauss_dtd, exp_dtd=bestfit_namespace.bestfit_exp_dtd, nb_1a_per_m=bestfit_namespace.bestfit_nb_1a_per_m, f_arfo=bestfit_namespace.bestfit_f_arfo, t_merge=bestfit_namespace.bestfit_t_merge, imf_yields_range=bestfit_namespace.bestfit_imf_yields_range, exclude_masses=bestfit_namespace.bestfit_exclude_masses, netyields_on=bestfit_namespace.bestfit_netyields_on, wiersmamod=bestfit_namespace.bestfit_wiersmamod, skip_zero=bestfit_namespace.bestfit_skip_zero, redshift_f=bestfit_namespace.bestfit_redshift_f, print_off=bestfit_namespace.bestfit_print_off, long_range_ref=bestfit_namespace.bestfit_long_range_ref, f_s_enhance=bestfit_namespace.bestfit_f_s_enhance, m_gas_f=bestfit_namespace.bestfit_m_gas_f, cl_SF_law=bestfit_namespace.bestfit_cl_SF_law, external_control=bestfit_namespace.bestfit_external_control, calc_SSP_ej=bestfit_namespace.bestfit_calc_SSP_ej, tau_ferrini=bestfit_namespace.bestfit_tau_ferrini, input_yields=bestfit_namespace.bestfit_input_yields, popIII_on=bestfit_namespace.bestfit_popIII_on, t_sf_z_dep=bestfit_namespace.bestfit_t_sf_z_dep, m_crit_on=bestfit_namespace.bestfit_m_crit_on, norm_crit_m=bestfit_namespace.bestfit_norm_crit_m, mass_frac_SSP=bestfit_namespace.bestfit_mass_frac_SSP, sfh_array_norm=bestfit_namespace.bestfit_sfh_array_norm, imf_rnd_sampling=bestfit_namespace.bestfit_imf_rnd_sampling, out_follows_E_rate=bestfit_namespace.bestfit_out_follows_E_rate, r_gas_star=bestfit_namespace.bestfit_r_gas_star, cte_m_gas=bestfit_namespace.bestfit_cte_m_gas, t_dtd_poly_split=bestfit_namespace.bestfit_t_dtd_poly_split, stellar_param_on=bestfit_namespace.bestfit_stellar_param_on, delayed_extra_log=bestfit_namespace.bestfit_delayed_extra_log, bhnsmerger_dtd_array=bestfit_namespace.bestfit_bhnsmerger_dtd_array, dt_in_SSPs=bestfit_namespace.bestfit_dt_in_SSPs, DM_array=bestfit_namespace.bestfit_DM_array, nsmerger_dtd_array=bestfit_namespace.bestfit_nsmerger_dtd_array, sfh_array=bestfit_namespace.bestfit_sfh_array, ism_ini=bestfit_namespace.bestfit_ism_ini, mdot_ini=bestfit_namespace.bestfit_mdot_ini, mdot_ini_t=bestfit_namespace.bestfit_mdot_ini_t, ytables_in=bestfit_namespace.bestfit_ytables_in, zm_lifetime_grid_nugrid_in=bestfit_namespace.bestfit_zm_lifetime_grid_nugrid_in, isotopes_in=bestfit_namespace.bestfit_isotopes_in, ytables_pop3_in=bestfit_namespace.bestfit_ytables_pop3_in, zm_lifetime_grid_pop3_in=bestfit_namespace.bestfit_zm_lifetime_grid_pop3_in, ytables_1a_in=bestfit_namespace.bestfit_ytables_1a_in, ytables_nsmerger_in=bestfit_namespace.bestfit_ytables_nsmerger_in, SSPs_in=bestfit_namespace.bestfit_SSPs_in, dt_in=bestfit_namespace.bestfit_dt_in, dt_split_info=bestfit_namespace.bestfit_dt_split_info, ej_massive=bestfit_namespace.bestfit_ej_massive, ej_agb=bestfit_namespace.bestfit_ej_agb, ej_sn1a=bestfit_namespace.bestfit_ej_sn1a, ej_massive_coef=bestfit_namespace.bestfit_ej_massive_coef, ej_agb_coef=bestfit_namespace.bestfit_ej_agb_coef, ej_sn1a_coef=bestfit_namespace.bestfit_ej_sn1a_coef, dt_ssp=bestfit_namespace.bestfit_dt_ssp, yield_interp=bestfit_namespace.bestfit_yield_interp, mass_sampled=bestfit_namespace.bestfit_mass_sampled, scale_cor=bestfit_namespace.bestfit_scale_cor, poly_fit_dtd_5th=bestfit_namespace.bestfit_poly_fit_dtd_5th, poly_fit_range=bestfit_namespace.bestfit_poly_fit_range, m_tot_ISM_t_in=bestfit_namespace.bestfit_m_tot_ISM_t_in, delayed_extra_dtd=bestfit_namespace.bestfit_delayed_extra_dtd, delayed_extra_dtd_norm=bestfit_namespace.bestfit_delayed_extra_dtd_norm, delayed_extra_yields=bestfit_namespace.bestfit_delayed_extra_yields, delayed_extra_yields_norm=bestfit_namespace.bestfit_delayed_extra_yields_norm)

if __name__ == '__main__':
    """Test the new omega class for performance"""
    print "Testing 'omega_new' and namespaces"
    if True:
        print "\t"+"importing the 'current_bestfit'-namespace, "
        print "\t"+"passing it to the new omega class, "
        print "\t"+"plot SFR with built-in analysis function."
        #Get all omega parameters from separate module
        import bestfit_param_omega.current_bestfit as cbf_namespace
        omega_instance = omega_new(cbf_namespace)
        omega_instance.plot_star_formation_rate()
        import matplotlib.pyplot as pl
        pl.show()
